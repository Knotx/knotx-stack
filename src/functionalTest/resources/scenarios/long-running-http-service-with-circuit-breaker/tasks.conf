global.handler.fragmentsHandler.config {
  tasks {
    books-listing {
      action = book-with-circuit-breaker
      on._fallback {
        action = book-inline-body-fallback
      }
    }
    authors-listing {
      action = author
      on {
        _success {
          action = te-hbs
        }
      }
    }
    books-and-authors-listing {
      actions = [
        {
          action = book-with-circuit-breaker
          on._fallback {
            action = book-inline-payload-fallback
          }
        },
        {
          action = author
        }
      ]
      on {
        _success {
          action = te-hbs
        }
      }
    }
  }

  actions {
    book-with-circuit-breaker {
      factory = cb
      config {
        circuitBreakerName = "Circuit Breaker: book service"
        circuitBreakerOptions {
          timeout = 1000
          maxFailures = 1
          resetTimeout = 10000
        }
      }
      doAction = book
    }
    book {
      factory = http
      config {
        endpointOptions {
          path = /service/mock/delayed
          domain = localhost
          port = ${test.random.delayedService.port}
          allowedRequestHeaders = ["Content-Type"]
        }
      }
    }
    author {
      factory = http
      config {
        endpointOptions {
          path = /service/mock/author.json
          domain = localhost
          port = ${test.wiremock.mockService.port}
          allowedRequestHeaders = ["Content-Type"]
        }
      }
    }
    // fallbacks
    book-inline-payload-fallback {
      factory = inline-payload
      config {
        alias = book
        payload {
          _result {
            title = "Knot.x Integration Tests in Practice"
            info {
              authors = "Knot.x Team"
            }
          }
          _response {
            metadata {
              statusCode = 500
            }
          }
        }
      }
    }
    book-inline-body-fallback {
      factory = inline-body
      config {
        body = "<p>Tags are unavailable at the moment</p>"
      }
    }
  }
}