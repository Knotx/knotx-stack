global.handler.fragmentsHandler.config {
  tasks {
    web-api-test {
      action = fetch-user-info
      onTransitions._success {
        actions = [
          {
            action = fetch-payment-providers
          }
          {
            action = fetch-offers
          }
        ]
        onTransitions._success {
          action = create-response
        }
      }
    }
  }

  actions {
    fetch-user-info {
      factory = http
      config.endpointOptions {
        path = /service/mock/userInfo.json
        domain = localhost
        port = ${test.wiremock.mockService.port}
        allowedRequestHeaders = ["Content-Type"]
      }
    }
    fetch-payment-providers {
      factory = http
      config.endpointOptions {
        path = /service/mock/paymentProviders.json
        domain = localhost
        port = ${test.wiremock.mockService.port}
        allowedRequestHeaders = ["Content-Type"]
      }
    }
    fetch-offers {
      factory = http
      config.endpointOptions {
        path = /service/mock/specialOffers.json
        domain = localhost
        port = ${test.wiremock.mockService.port}
        allowedRequestHeaders = ["Content-Type"]
      }
    }
    create-response {
      factory = payload-to-body
    }
  }

  taskFactories = [
    {
      factory = default
      config {
        tasks = ${global.handler.fragmentsHandler.config.tasks}
        nodeFactories = [
          {
            factory = action
            config.actions = ${global.handler.fragmentsHandler.config.actions}
          }
          {
            factory = subtasks
          }
        ]
      }
    }
  ]

  consumerFactories = [
    {
      factory = fragmentJsonBodyWriter
      config {
        condition {
          param = debug
          header = x-knotx-debug
        }
        fragmentTypes = ["snippet"]
      }
    }
  ]
}