global.handler.fragmentsHandler.config {
  tasks {
    books-listing {
      action = book
      on {
        _error {
          action = book-inline-body-fallback
        }
      }
    }
    authors-listing {
      action = author
      on {
        _error {
          action = author-inline-payload-fallback
          on._success {
            action = te-hbs
          }
        }
      }
    }
    books-and-authors-listing {
      subtasks = [
        {
          action = book
          on._error {
            action = book-inline-payload-fallback
          }
        },
        {
          action = author
        }
      ]
      on {
        _error {
          action = author-inline-payload-fallback
          on._success {
            action = te-hbs
          }
        }
      }
    }
  }

  actions {
    book {
      factory = http
      config.endpointOptions {
        path = /service/broken/500.json
        domain = localhost
        port = ${test.random.mockBrokenService.port}
        allowedRequestHeaders = ["Content-Type"]
      }
    }
    author {
      factory = http
      config.endpointOptions {
        path = /service/broken/500.json
        domain = localhost
        port = ${test.random.mockBrokenService.port}
        allowedRequestHeaders = ["Content-Type"]
      }
    }
    // fallbacks
    author-inline-payload-fallback {
      factory = inline-payload
      config {
        alias = author
        payload {
          _result {
            name = "Knot X",
            info {
              portfolio = [
                "tutorials",
                "blogs",
                "books"
              ],
              bio = "Aliquam cursus fermentum mi, vel tempus mi pellentesque vel. Nunc in feugiat lorem. Etiam placerat ante eget sem euismod, sit amet dictum sapien vulputate. Morbi pellentesque arcu a mauris ornare eleifend."
            }
          }
          _response {
            metadata {
              statusCode = 500
            }
          }
        }
      }
    }
    book-inline-payload-fallback {
      factory = inline-payload
      config {
        alias = book
        payload {
          _result {
            title = "Knot.x Integration Tests in Practice"
            info {
              authors = "Knot.x Team"
            }
          }
          _response {
            metadata {
              statusCode = 500
            }
          }
        }
      }
    }
    book-inline-body-fallback {
      factory = inline-body
      config {
        body = "<p>Tags are unavailable at the moment</p>"
      }
    }
  }
}