########### Modules configurations ###########
config.server {
  handlers.common {
    request = [
      {
        name = cookieHandler
      },
      {
        name = bodyHandler
      },
      {
        name = requestContextHandler
      }
    ],
    response = [
      {
        name = headerHandler
        # Statically defined HTTP response header returned to the client in every HTTP response
        config {
          name = X-Server
          value = Knot.x-Custom-Header
        }
      },
      {
        name = writerHandler
        # List of HTTP response headers Knot.x can return to the client
        config.allowedResponseHeaders = [
          "Access-Control-Allow-Origin",
          "Content-Type",
          "Content-Length"
        ]
      }
    ]
  }
  options.config {
    # Configuraiton of HTTP server
    serverOptions {
      # Knot.x server HTTP port
      port = 9092

      # If you want a server to serve SSL connections you can configure it here
      #
      # Enable SSL
      # ssl = true
      #
      # Path on the server the keystore.jks file is located
      # keyStoreOptions.path =
      #
      # Keystore password
      # keyStoreOptions.password =
    }

    # Location of your Open API spec. It can be an absolute path, a local path or remote url (with HTTP protocol).
    routingSpecificationLocation = /openapi.yaml

    displayExceptionDetails = true
    dropRequests = false

    routingOperations = []
    include required(classpath("conf/routes/templating.conf"))
  }

  # The options object carries-on configuration called DeploymentOptions for a given verticle.
  # It allows you to control the verticle behaviour, such as how many instances, classpath isolation, workers, etc.
  # See available options http://vertx.io/docs/vertx-core/dataobjects.html#DeploymentOptions
  #
  # options {}
}

########### Globals ###########
global {
  handler {

  }
}
