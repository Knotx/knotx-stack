# Configuraiton of HTTP server
serverOptions {
  # Knot.x server HTTP port
  port = ${global.server.port}

  # If you want a server to serve SSL connections you can configure it here
  #
  # Enable SSL
  # ssl = true
  #
  # Path on the server the keystore.jks file is located
  # keyStoreOptions.path =
  #
  # Keystore password
  # keyStoreOptions.password =
}

routingSpecificationLocation = /openapi.yaml
routingOperations = [
  {
    operationId = te-local-get
    handlers = ${global.server.routingOperations.handlers.request} [
      {
        name = repositoryHandler
        config.proxyAddress = ${global.repositories.fsRepo.address}
      },
      {
        name = splitterHandler
        config.proxyAddress = ${global.splitter.address}
      },
      {
        name = knotEngineHandler
        config.routing = {
          proxyAddress = ${global.forms.address},
          onTransition.next {
            address = ${global.bridge.address},
            onTransition.next {
              address = ${global.templateEngine.address}
            }
          }
        }
      },
      {
        name = assemblerHandler
        config.proxyAddress = ${global.assembler.address}
      }
    ] ${global.server.routingOperations.handlers.response}
  },
  {
    operationId = te-local-post
    handlers = ${global.server.routingOperations.handlers.request} [
      {
        name = repositoryHandler
        config.proxyAddress = ${global.repositories.fsRepo.address}
      },
      {
        name = splitterHandler
        config.proxyAddress = ${global.splitter.address}
      },
      {
        name = knotEngineHandler
        config.routing = {
          proxyAddress = ${global.forms.address},
          onTransition.next {
            address = ${global.bridge.address},
            onTransition.next {
              address = ${global.templateEngine.address}
            }
          }
        }
      },
      {
        name = assemblerHandler
        config.proxyAddress = ${global.assembler.address}
      }
    ] ${global.server.routingOperations.handlers.response}
  },
  {
    operationId = te-remote-get
    handlers = ${global.server.routingOperations.handlers.request} [
      {
        name = repositoryHandler
        config.proxyAddress = ${global.repositories.httpRepo.address}
      },
      {
        name = splitterHandler
        config.proxyAddress = ${global.splitter.address}
      },
      {
        name = knotEngineHandler
        config.routing = {
          proxyAddress = ${global.forms.address}
          onTransition.next {
            address = ${global.bridge.address}
            onTransition.next {
              address = ${global.templateEngine.address}
            }
          }
        }
      },
      {
        name = assemblerHandler
        config.proxyAddress = ${global.assembler.address}
      }
    ] ${global.server.routingOperations.handlers.response}
  }
]

displayExceptionDetails = true
dropRequests = false
