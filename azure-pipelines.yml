# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- bash: |
    mkdir ~/.ssh
    chmod 700 ~/.ssh
    ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

- script: |
    echo "Knot.x Stack"
    git clone https://github.com/Knotx/knotx-aggregator.git
    cd knotx-aggregator/development
    mkdir modules
    ./pull-all.sh -r modules -b $(Build.SourceBranchName) -a $(System.AccessToken)
    ./build-all.sh -r modules -d

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'distribution'

- script: |
    echo "Knot.x Docker"
    git clone https://github.com/Knotx/knotx-docker.git
    cd knotx-docker
    mvn clean package