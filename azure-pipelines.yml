# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    git clone https://github.com/Knotx/knotx-aggregator.git
    mkdir knotx-repos
  displayName: "Prepare Aggregator"
- task: CmdLine@2
  inputs:
    script: |
      cd knotx-aggregator/development
      if [[ -z "$(System.PullRequest.SourceBranch)" ]] ; then
        ./pull-all.sh -r ../../knotx-repos -b $(System.PullRequest.SourceBranch) -a
      else
        ./pull-all.sh -r ../../knotx-repos -b "$(Build.SourceBranchName)" -a
      fi
  displayName: "Clone all repositories"
- task: CmdLine@2
  inputs:
    script: |
      cd knotx-aggregator/development
      ./build-all.sh -r ../../knotx-repos
  displayName: "Build Stack"
- script: |
    cd knotx-repos/knotx-docker
    mvn clean package
  displayName: "Build Docker image"
- script: |
    cd knotx-repos/knotx-starter-kit
    ./gradlew -Pknotx.version=2.0.0-SNAPSHOT build
  displayName: "Build Starter Kit"
